<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="mapper.member"> 	
	<resultMap type="memberDTO" id="memberResult">
		<result property="id" column="id" />
		<result property="name" column="name" />
		<result property="pwd" column="pwd" />
		<result property="nick_nm" column="nick_nm" />
		<result property="email" column="email" />
		<result property="join_Date" column="join_Date" />
		<result property="last_update" column="last_update" />
		<result property="grade" column="grade" />
	</resultMap>
	
	<select id="Login" resultType="memberDTO" parameterType="memberDTO">
		<![CDATA[
			SELECT * 
			FROM P_MEMBER 
			WHERE ID = #{id} AND PWD = #{pwd}
		]]>	
	</select>
	
	
	<!-- 아이디 찾기 -->
	<select id="find_id" resultType="memberDTO" parameterType="memberDTO">
		<![CDATA[
			SELECT * 
			FROM P_MEMBER 
			WHERE NAME = #{name} AND EMAIL = #{email}
		]]>	
	</select>
	
	<!-- 비밀번호 찾기 -->
	<select id="find_pw" resultType="memberDTO" parameterType="memberDTO">
		<![CDATA[
			SELECT * 
			FROM P_MEMBER 
			WHERE ID = #{id} AND EMAIL = #{email}
		]]>	
	</select>
	
	<!-- 비밀번호 변경 -->
	<update id="update_pw">
		<![CDATA[
			UPDATE P_MEMBER 
			SET PWD = #{pwd} 
			WHERE ID = #{id}
		]]>	
	</update>
	
	<!-- 구글 로그인 -->
	<select id="readMemberWithIDPW" resultType="memberDTO">
		<![CDATA[
			select * from P_MEMBER where id=#{id}
		]]>	
	</select>
	
	<!-- 구글 로그인 데이터 넘기기 -->
	<insert id="joinMemberByGoogle" parameterType="java.util.Map">
		<![CDATA[
			insert into P_MEMBER (id, name, pwd, nick_nm, email)
			values (#{id}, #{name}, #{pwd}, #{nick_nm}, #{email})
		]]>	
	</insert>
	
	<!-- 카카오 정보 찾기 -->
	<select id="findKakao" parameterType="java.util.HashMap" resultType="memberDTO">
		<![CDATA[
			select * from P_MEMBER where id=#{id}
		]]>	
	</select>

	<!-- 카카오 정보 저장 -->
	<insert id="kakaoInsert" parameterType="java.util.HashMap">
		<![CDATA[
			insert into P_MEMBER(id, pwd,  name, nick_nm, email )
			values(#{id}, #{pwd}, #{name}, #{nick_nm}, #{email})
		]]>
	</insert>
	
	<!-- 네이버 로그인 -->
	<select id="readMemberWithIDPWNaver" resultType="memberDTO">
		<![CDATA[
			select * from P_MEMBER where id=#{id}
		]]>	
	</select>
	
	<!-- 네이버 로그인 데이터 넘기기 -->
	<insert id="joinMemberByNaver" parameterType="java.util.Map">
		<![CDATA[
			insert into P_MEMBER (id, name, pwd, nick_nm, email)
			values (#{id}, #{name}, #{pwd}, #{nick_nm}, #{email})
		]]>	
	</insert>
	
	<!-- 멤버 추가하기 -->
	<insert id="addMember" parameterType="memberDTO">
		<![CDATA[
			INSERT INTO P_MEMBER (ID, PWD, NAME, NICK_NM, EMAIL)
			VALUES(#{id}, #{pwd}, #{name}, #{nick_nm}, #{email})
		]]>
	</insert>
	<!-- ID 중복검사 -->
	<select id="duplicatecheckId" parameterType="String" resultType="String">
		<![CDATA[
			SELECT DECODE(COUNT(*), 1, 'true', 0, 'false')
			FROM P_MEMBER
			WHERE ID = #{id}	
		]]>
	</select>
	
	<!-- 닉네임 중복검사 -->
	<select id="duplicatecheckNick" parameterType="String" resultType="String">
		<![CDATA[
			SELECT DECODE(COUNT(*), 1, 'true', 0, 'false')
			FROM P_MEMBER
			WHERE NICK_NM = #{nick_nm}
		]]>
	</select>

</mapper>